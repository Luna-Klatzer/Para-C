# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python deploy and test

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Deletes previous coverage-branch if it exists
      run: |
        git branch -d ${{ github.ref }}-coverage-report
        git push origin --delete '${{ github.ref }}-coverage-report'
      if: ${{ 'git rev-parse --verify --quiet ${{ github.ref }}-coverage-report' != '' }}
    - name: Create new branch for coverage
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: '${{ github.ref }}-coverage-report'
    - uses: actions/checkout@v2
      with:
       ref: '${{ github.ref }}-coverage-report'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade coverage
        python -m pip install --upgrade coverage-badge
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: pytest with coverage
      run: |
        python3 -m pip install -e .
        cd pytest
        coverage run -m pytest -q --github=true ;
        if [ -f ../coverage.svg ]; then rm ../coverage.svg; fi
        coverage-badge -o ../coverage.svg
        cd ..
    - name: Sleep for 15 seconds
      uses: kibertoad/wait-action@master
      with:
        time: '15s'
    - uses: EndBug/add-and-commit@v7
      with:
        message: 'Updated coverage.svg'
        add: 'coverage.svg'
        default_author: github_actions
    - name: coverage-html
      run: |
        cd pytest ; coverage html ; cd ..
        mv ./pytest/htmlcov ./htmlcov
        rm -v !("htmlcov")
        mv ./htmlcov/* .
        rm ./htmlcov/
    - uses: EndBug/add-and-commit@v7
      with:
        message: 'Added coverage report'
        add: '.'
        default_author: github_actions