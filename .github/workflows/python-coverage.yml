name: Python Coverage

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true # Required for fetching the branch name

    steps:
    - uses: nelonoel/branch-name@v1
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.BRANCH_NAME }}
    - name: Check for Branch existance
      id: branch_existance
      run: |
        echo "::set-output name=branch_hash::$(git show-ref ${{ env.BRANCH_NAME }}-coverage-report)"
    - name: Deletes previous coverage-branch if it exists
      run: |
        git fetch origin
        echo ${{ steps.branch_existance.outputs.branch_hash }}
        if ${{ steps.branch_existance.outputs.branch_hash != '' }}; then
          git fetch origin
          git push origin --delete ${{ env.BRANCH_NAME }}-coverage-report; fi
    - name: Create new branch for coverage
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ env.BRANCH_NAME }}-coverage-report
    - uses: EndBug/add-and-commit@v7
      with:
        message: 'Updated repo'
        add: '.'
        branch: ${{ env.BRANCH_NAME }}-coverage-report
        push: '--force -u origin ${{ env.BRANCH_NAME }}-coverage-report --set-upstream'
        default_author: github_actions
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade coverage
        python -m pip install --upgrade coverage-badge
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: pytest with coverage
      run: |
        python3 -m pip install -e .
        cd pytest
        coverage run -m pytest -q --github=true ;
        cd ..
    - name: coverage-html
      run: |
        cd pytest ; coverage html ; cd ..
        mv ./pytest/htmlcov/ /tmp/htmlcov/
        rm -rf *
        mv /tmp/htmlcov/* .
    - name: Sleep for 15 seconds
      uses: kibertoad/wait-action@master
      with:
        time: '15s'
    - uses: EndBug/add-and-commit@v7
      with:
        message: 'Added coverage report'
        add: '.'
        branch: ${{ env.BRANCH_NAME }}-coverage-report
        push: '--force -u origin ${{ env.BRANCH_NAME }}-coverage-report --set-upstream'
        default_author: github_actions