name: Codecov
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.8
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        python -m pip install --upgrade -e .
        pytest --cov=./parac --cov-report=xml
    - name: Upload Python coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: .
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        verbose: true
    - name: Build GTest Tests
      run: |
        cd ./modules
        cmake .
        cmake --build . --target runParacModulesTests -- -j 9
    - name: Run C-Coverage
      run: |
        ./modules/parac-modules-tests/tests/runParacModulesTests
        tree .
        gcov -abcfu ./parac-modules/CMakeFiles/parac-modules.dir/*.o
    - name: Upload C coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: .
        files: ./parac-modules/*.gcov
        verbose: true
